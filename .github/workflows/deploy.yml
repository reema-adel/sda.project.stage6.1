name: CI/CD Pipeline for Chatbot Deployment

# Trigger the workflow on push to the main branch
on:
  workflow_dispatch:
  push:
    branches:
      - master

# Define the jobs to be executed
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4
      # check the log-in
      - name: Azure Login
        uses: azure/login@v2
        with:
          auth-type: 'servicePrincipal'  # Explicitly set auth-type
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # Match your VM's Python version

      # Install dependencies (optional, for validation on runner)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: .

      # Azure Login using service principal credentials
      - name: Azure Login
        uses: azure/login@v2.2.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Run the update script on the Azure VM using CustomScript extension
      - name: Azure VM Update
        run: |
          az vm extension set \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --vm-name ${{ secrets.VM_NAME }} \
            --name CustomScript \
            --force-update \
            --publisher Microsoft.Azure.Extensions \
            --settings '{"commandToExecute": "/usr/local/bin/update_project.sh"}'
    
      # Optional: Verify the deployment by checking service status
      - name: Verify Deployment
        run: |
          az vm run-command invoke \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --name ${{ secrets.VM_NAME }} \
            --command-id RunShellScript \
            --scripts "systemctl status chromadb.service && systemctl status backend.service && systemctl status chatbot.service"
